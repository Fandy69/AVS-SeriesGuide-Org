// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = '1.4.10' // https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md
    ext.coroutines_version = '1.4.0' // https://github.com/Kotlin/kotlinx.coroutines/blob/master/CHANGES.md
    ext.versions = [
            'minSdk': 16, // Android 4.1
            'compileSdk': 30, // Android 11 (R)
            'targetSdk': 30, // Android 11 (R)

            // https://developer.android.com/jetpack/androidx/releases
            'core': '1.3.2', // https://developer.android.com/jetpack/androidx/releases/core
            'annotation': '1.1.0',
            'lifecycle': '2.2.0',
            'paging': '2.1.2',
            'room': '2.2.5',

            'butterknife': '10.2.3', // https://github.com/JakeWharton/butterknife/blob/master/CHANGELOG.md
            'crashlytics': '17.2.2', // https://firebase.google.com/support/release-notes/android
            'dagger': '2.29.1', // https://github.com/google/dagger/releases
            'gson': '2.8.5', // https://github.com/google/gson/blob/master/CHANGELOG.md
            // OkHttp 3.13.0 requires Android 5+.
            // https://square.github.io/okhttp/changelog_3x/
            'okhttp': '3.12.12',
            // Retrofit 2.7.0 requires Android 5+.
            // https://github.com/square/retrofit/blob/master/CHANGELOG.md
            'retrofit': '2.6.4',
            'timber': '4.7.1', // https://github.com/JakeWharton/timber/blob/master/CHANGELOG.md

            'androidUtils': '2.4.1', // https://github.com/UweTrottmann/AndroidUtils/blob/master/RELEASE_NOTES.md
            'thetvdb': '2.3.0', // https://github.com/UweTrottmann/thetvdb-java/blob/master/CHANGELOG.md
            'tmdb': '2.1.1', // https://github.com/UweTrottmann/tmdb-java/blob/master/CHANGELOG.md
            'trakt': '6.8.0', // https://github.com/UweTrottmann/trakt-java/blob/master/CHANGELOG.md

            'truth': '1.1', // https://github.com/google/truth/releases

            // version 15xxxyy -> min SDK 16, release xxx, build yy
            'code': 1604603,
            'name': '46.6-k',
    ]
    // load some properties that should not be part of version control
    if (file('secret.properties').exists()) {
        def properties = new Properties()
        properties.load(new FileInputStream(file("secret.properties")))
        properties.each { property ->
            project.ext.set(property.key, property.value)
        }
    }
    ext.isCiBuild = System.getenv('CI') == 'true'

    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2' // libraries, SeriesGuide
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.34.0'
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:2.0.1' // SeriesGuide
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.22.0' // api
        // Firebase Crashlytics
        // https://firebase.google.com/support/release-notes/android
        classpath 'com.google.gms:google-services:4.3.4'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'
    }
}

apply plugin: 'com.github.ben-manes.versions'

// reject preview releases for dependencyUpdates task
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Preview release')
            }
        }
    }
}

apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
    packageGroup = "com.uwetrottmann"
    if (rootProject.hasProperty('SONATYPE_NEXUS_USERNAME')
            && rootProject.hasProperty('SONATYPE_NEXUS_PASSWORD')) {
        username = SONATYPE_NEXUS_USERNAME
        password = SONATYPE_NEXUS_PASSWORD
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

task clean(type: Delete) {
    group "build"
    delete rootProject.buildDir
}

wrapper {
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}
